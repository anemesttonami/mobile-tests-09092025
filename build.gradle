plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

allure {
    report {
        version.set('2.34.1')
    }
    adapter {
        aspectjWeaver.set(true) // это чтобы работало @Step
        frameworks {
            junit5 {
                adapterVersion.set('2.29.1')
                enabled.set(true) // явно включает адаптер , рекомендуется указывать
            }
        }
    }
}

repositories {
    mavenCentral()
}

def aspectjWeaverVersion = "1.9.22",
    selenideVersion = "6.13.0",
    restAssuredVersion = "5.3.0",
    allureVersion = "2.21.0",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:8.3.0",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'org.aeonbits.owner:owner:1.0.4'
    )
}
tasks.withType(Test) {
    useJUnitPlatform()

    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register('ios_task', Test) {
    systemProperty("platform","ios")
    useJUnitPlatform {
        includeTags("ios")
    }
}

tasks.register('android_task', Test){
    systemProperty("platform","android")
    useJUnitPlatform{
        includeTags("android")
    }
}
